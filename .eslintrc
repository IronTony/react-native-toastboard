{
    "parser": "babel-eslint",
    "extends": [
        "airbnb",
        "eslint:recommended",
        "plugin:react/recommended",
        "plugin:flowtype/recommended"
    ],
    "plugins": [
        "react",
        "flowtype",
        "babel"
    ],
    "settings": {
        "react": {
            "version": "16"
        }
    },
    "env": {
        "es6": true,
        "node": true,
        "browser": true
    },
    "rules": {
        "babel/no-invalid-this": "error",
        "react/jsx-uses-vars": "error",
        "react/require-default-props": "off",
        "react/prop-types": [
            "error",
            {
                "ignore": [
                    "style",
                    "children",
                    "className"
                ]
            }
        ],
        "react/jsx-filename-extension": "off",
        "react/sort-comp": [
            "error",
            {
                "order": [
                    "static-methods",
                    "type-annotations",
                    "instance-variables",
                    "lifecycle",
                    "navigationLifecycle",
                    "storeLifecycle",
                    "render",
                    "getters",
                    "everething-else"
                ],
                "groups": {
                    "navigationLifecycle": [
                        "willBlur",
                        "willFocus",
                        "didBlur",
                        "didFocus"
                    ],
                    "storeLifecycle": [
                        "storeDidUpdateState",
                        "storeDidUpdate"
                    ]
                }
            }
        ],
        "react/jsx-indent": "off",
        "react/jsx-indent-props": "off",
        "react/destructuring-assignment": "off",
        "react/forbid-foreign-prop-types": "off",
        "react/forbid-prop-types": [
            "error",
            {
                "forbid": [
                    "any"
                ]
            }
        ],
        "import/no-extraneous-dependencies": [
            "error",
            {
                "devDependencies": true
            }
        ],
        "import/no-default-export": "error",
        "import/prefer-default-export": "off",
        "import/no-unresolved": [
            "error",
            {
                "ignore": [
                    "^react-native-toastboard"
                ]
            }
        ],
        "jsx-key": true,
        "jsx-no-bind": true,
        "jsx-no-lambda": true,
        "jsx-boolean-value": false,
        "jsx-no-string-ref": true,
        "jsx-self-close": true,
        "jsx-wrap-multiline": true,
        "jsx-alignment": true,
        "jsx-equals-spacing": [
            true,
            "never"
        ],
        "no-unused-vars": "error",
        "no-magic-numbers": [
            "error",
            {
                "ignore": [
                    2,
                    1,
                    0.2,
                    0,
                    -1,
                    -2
                ]
            }
        ],
        "no-empty": "error",
        "no-invalid-this": "off",
        "no-trailing-spaces": "error",
        "no-unused-expressions": [
            "error",
            {
                "allowShortCircuit": true
            }
        ],
        "no-multiple-empty-lines": [
            "error",
            {
                "max": 1,
                "maxEOF": 0
            }
        ],
        "max-classes-per-file": [
            "error",
            1
        ],
        "max-lines": [
            "error",
            200
        ],
        "max-len": [
            "error",
            {
                "code": 120
            }
        ],
        "indent": "off",
        "eqeqeq": "error",
        "curly": "error",
        "quotes": [
            "error",
            "double"
        ],
        "eol-last": "error",
        "prefer-const": "error",
        "space-before-function-paren": [
            "error",
            {
                "named": "never"
            }
        ],
        "semi": "error"
    },
    "parserOptions": {
        "ecmaFeatures": {
            "legacyDecorators": true
        },
        "ecmaVersion": 2017
    }
}